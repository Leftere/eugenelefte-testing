// ================================== //
//    #UTILITY - COLORS
// ================================== //
@use 'sass:color';
@use 'sass:math';
@use 'sass:map';

// ================================== //
// COLOR CONTRAST
//
// Returns a light (#fff) or dark (#000) contrast color based on the specified base color
// https://getbootstrap.com/docs/4.0/getting-started/theming/#color-contrast
// ================================== //

@function color-contrast($color, $dark: #000, $light: #fff) {
  $r: color.red($color);
  $g: color.green($color);
  $b: color.blue($color);
  $yiq: math.div($r * 299 + $g * 587 + $b * 114, 1000);

  // The yiq lightness value that determines when the lightness of color changes from "dark" to "light".
  // Acceptable values are between 0 and 255.
  @if $yiq >= 150 {
    @return $dark;
  } @else {
    @return $light;
  }
}

// ================================== //
// Palette
// ================================== //
@function palette($palette, $tone: 'base') {
  @return map.get($palettes, colors, $palette, $tone);
}

// Returns flattened $palettes color map
@function get-flat-palette($map) {
  $colors: ();

  @each $color, $value in map-get($map, colors) {
    @each $name, $tone in $value {
      // key for "base" color is the color name itself, e.g. "gray"
      // key for other tones combines color and tone name, e.g. "gray-light"
      $key: if($name == 'base', $color, $color + '-' + $name);
      $colors: map.merge($colors, ($key: $tone));
    }
  }

  @return $colors;
}
